{"version":3,"sources":["webpack:///./src/ItemEdit.jsx"],"names":["ItemEdit","React","Component","fetchData","match","showError","query","params","id","result","graphQLFetch","constructor","item","store","initialData","issue","state","invalidFields","showingValidation","toastVisible","toastMessage","toastType","onChange","bind","handleSubmit","onValidityChange","dismissValidation","showValidation","showSuccess","dismissToast","componentDidMount","loadData","componentDidUpdate","prevProps","prevId","props","event","naturalValue","name","value","textValue","target","undefined","setState","prevState","valid","e","preventDefault","Object","keys","length","changes","data","itemUpdate","message","render","propsId","validationMessage","category","image","price","description","ControlLabel","NumInput","TextInput"],"mappings":"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","file":"server.3ff7da68b0dd8b1b0e03.hot-update.js","sourcesContent":["/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {\n  Col, Panel, Form, FormGroup, FormControl, ControlLabel,\n  ButtonToolbar, Button, Alert,\n} from 'react-bootstrap';\n\nimport graphQLFetch from './graphQLFetch.js';\nimport NumInput from './NumInput.jsx';\nimport TextInput from './TextInput.jsx';\nimport Toast from './Toast.jsx';\nimport store from './store.js';\n\nexport default class ItemEdit extends React.Component {\n  static async fetchData(match, showError) {\n    const query = `query item($id: Int!) {\n      item(id: $id) {\n        id name category image\n        price description\n      }\n    }`;\n    const { params: { id } } = match;\n    const result = await graphQLFetch(query, { id }, showError);\n    return result;\n  }\n\n  constructor() {\n    super();\n    const item = store.initialData ? store.initialData.issue : null;\n    delete store.initialData;\n    this.state = {\n      item,\n      invalidFields: {},\n      showingValidation: false,\n      toastVisible: false,\n      toastMessage: '',\n      toastType: 'success',\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onValidityChange = this.onValidityChange.bind(this);\n    this.dismissValidation = this.dismissValidation.bind(this);\n    this.showValidation = this.showValidation.bind(this);\n    this.showSuccess = this.showSuccess.bind(this);\n    this.showError = this.showError.bind(this);\n    this.dismissToast = this.dismissToast.bind(this);\n  }\n\n  componentDidMount() {\n    const { item } = this.state;\n    if (item == null) {\n      this.loadData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { match: { params: { id: prevId } } } = prevProps;\n    const { match: { params: { id } } } = this.props;\n    if (id !== prevId) {\n      this.loadData();\n    }\n  }\n\n  onChange(event, naturalValue) {\n    const { name, value: textValue } = event.target;\n    const value = naturalValue === undefined ? textValue : naturalValue;\n    this.setState(prevState => ({\n      item: { ...prevState.item, [name]: value },\n    }));\n  }\n\n  onValidityChange(event, valid) {\n    const { name } = event.target;\n    this.setState((prevState) => {\n      const invalidFields = { ...prevState.invalidFields, [name]: !valid };\n      if (valid) delete invalidFields[name];\n      return { invalidFields };\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    this.showValidation();\n    const { item, invalidFields } = this.state;\n    if (Object.keys(invalidFields).length !== 0) return;\n\n    const query = `mutation itemUpdate(\n      $id: Int!\n      $changes: ItemUpdateInputs!\n    ) {\n      itemUpdate(\n        id: $id\n        changes: $changes\n      ) {\n        id name category image\n        price description\n      }\n    }`;\n\n    const { id, ...changes } = item;\n    const data = await graphQLFetch(query, { changes, id }, this.showError);\n    if (data) {\n      this.setState({ item: data.itemUpdate });\n      this.showSuccess('Updated item successfully');\n      // const { history } = this.props;\n      // history.push('/');\n    }\n  }\n\n  async loadData() {\n    const { match } = this.props;\n    const data = await ItemEdit.fetchData(match, this.showError);\n    this.setState({ item: data ? data.item : {}, invalidFields: {} });\n  }\n\n  showValidation() {\n    this.setState({ showingValidation: true });\n  }\n\n  dismissValidation() {\n    this.setState({ showingValidation: false });\n  }\n\n  showSuccess(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'success',\n    });\n  }\n\n  showError(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'danger',\n    });\n  }\n\n  dismissToast() {\n    this.setState({ toastVisible: false });\n  }\n\n  render() {\n    const { item } = this.state;\n    if (item == null) {\n      return null;\n    }\n    const { item: { id } } = this.state;\n    const { match: { params: { id: propsId } } } = this.props;\n    if (id == null) {\n      if (propsId != null) {\n        return <h3>{`Item with ID ${propsId} not found.`}</h3>;\n      }\n      return null;\n    }\n\n    const { invalidFields, showingValidation } = this.state;\n    let validationMessage;\n    if (Object.keys(invalidFields).length !== 0 && showingValidation) {\n      validationMessage = (\n        <Alert bsStyle=\"danger\" onDismiss={this.dismissValidation}>\n          Please correct invalid fields before submitting.\n        </Alert>\n      );\n    }\n\n    const { item: { name, category } } = this.state;\n    const { item: { image, price, description } } = this.state;\n    const { toastVisible, toastMessage, toastType } = this.state;\n\n    return (\n      <Panel>\n        <Panel.Heading>\n          <Panel.Title>{`Editing item: ${id}`}</Panel.Title>\n        </Panel.Heading>\n        <Panel.Body>\n          <Form horizontal onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Category</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass=\"select\"\n                  name=\"category\"\n                  value={category}\n                  onChange={this.onChange}\n                >\n                  <option value=\"Jeans\">Jeans</option>\n                  <option value=\"Shirts\">Shirts</option>\n                  <option value=\"Jackets\">Jackets</option>\n                  <option value=\"Sweaters\">Sweaters</option>\n                  <option value=\"Accessories\">Accessories</option>\n                </FormControl>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Price</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={NumInput}\n                  name=\"price\"\n                  value={price}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Name</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  size={50}\n                  name=\"name\"\n                  value={name}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Image</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  name=\"image\"\n                  value={image}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>Description</Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  tag=\"textarea\"\n                  rows={4}\n                  cols={50}\n                  name=\"description\"\n                  value={description}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col smOffset={3} sm={6}>\n                <ButtonToolbar>\n                  <Button bsStyle=\"primary\" type=\"submit\">Submit</Button>\n                  <LinkContainer to=\"/items\">\n                    <Button bsStyle=\"link\">Back</Button>\n                  </LinkContainer>\n                </ButtonToolbar>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col smOffset={3} sm={9}>{validationMessage}</Col>\n            </FormGroup>\n          </Form>\n        </Panel.Body>\n        <Panel.Footer>\n          <Link to={`/edit/${id - 1}`}>Prev Item</Link>\n          {' | '}\n          <Link to={`/edit/${id + 1}`}>Next Item</Link>\n        </Panel.Footer>\n        <Toast\n          showing={toastVisible}\n          onDismiss={this.dismissToast}\n          bsStyle={toastType}\n        >\n          {toastMessage}\n        </Toast>\n      </Panel>\n    );\n  }\n}\n"],"sourceRoot":""}