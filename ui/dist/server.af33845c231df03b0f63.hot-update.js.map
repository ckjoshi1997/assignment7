{"version":3,"sources":["webpack:///./src/ItemList.jsx"],"names":["ItemList","React","Component","constructor","state","items","toastVisible","toastMessage","toastType","deleteItem","bind","showSuccess","showError","dismissToast","componentDidMount","loadData","componentDidUpdate","prevProps","location","search","prevSearch","props","params","URLSearchParams","vars","get","category","priceMin","parseInt","Number","isNaN","priceMax","query","data","graphQLFetch","setState","itemList","index","pathname","history","id","itemDelete","prevState","newList","push","splice","message","render","match","path","ItemDetail"],"mappings":"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","file":"server.af33845c231df03b0f63.hot-update.js","sourcesContent":["import React from 'react';\nimport URLSearchParams from 'url-search-params';\nimport { Route } from 'react-router-dom';\nimport { Panel } from 'react-bootstrap';\n\nimport ItemFilter from './ItemFilter.jsx';\nimport ItemTable from './ItemTable.jsx';\nimport ItemDetail from './ItemDetail.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport Toast from './Toast.jsx';\nimport store from './store.js';\n\nexport default class ItemList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      toastVisible: false,\n      toastMessage: '',\n      toastType: 'info',\n    };\n    // this.closeItem = this.closeItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.showSuccess = this.showSuccess.bind(this);\n    this.showError = this.showError.bind(this);\n    this.dismissToast = this.dismissToast.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location: { search: prevSearch } } = prevProps;\n    const { location: { search } } = this.props;\n    if (prevSearch !== search) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { location: { search } } = this.props;\n    const params = new URLSearchParams(search);\n    const vars = {};\n    if (params.get('category')) vars.category = params.get('category');\n\n    const priceMin = parseInt(params.get('priceMin'), 10);\n    if (!Number.isNaN(priceMin)) vars.priceMin = priceMin;\n    const priceMax = parseInt(params.get('priceMax'), 10);\n    if (!Number.isNaN(priceMax)) vars.priceMax = priceMax;\n\n    const query = `query itemList(\n      $category: CategoryType\n      $priceMin: Float\n      $priceMax: Float\n    ) {\n      itemList(\n        category: $category\n        priceMin: $priceMin\n        priceMax: $priceMax\n      ) {\n        id name category image\n        price\n      }\n    }`;\n\n    const data = await graphQLFetch(query, vars, this.showError);\n    if (data) {\n      this.setState({ items: data.itemList });\n    }\n  }\n\n  async deleteItem(index) {\n    const query = `mutation itemDelete($id: Int!) {\n      itemDelete(id: $id)\n    }`;\n    const { items } = this.state;\n    const { location: { pathname, search }, history } = this.props;\n    const { id } = items[index];\n    const data = await graphQLFetch(query, { id }, this.showError);\n    if (data && data.itemDelete) {\n      this.setState((prevState) => {\n        const newList = [...prevState.items];\n        if (pathname === `/items/${id}`) {\n          history.push({ pathname: '/items', search });\n        }\n        newList.splice(index, 1);\n        return { items: newList };\n      });\n      this.showSuccess(`Deleted item ${id} successfully.`);\n    } else {\n      this.loadData();\n    }\n  }\n\n  showSuccess(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'success',\n    });\n  }\n\n  showError(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'danger',\n    });\n  }\n\n  dismissToast() {\n    this.setState({ toastVisible: false });\n  }\n\n  render() {\n    const { items } = this.state;\n    const { toastVisible, toastType, toastMessage } = this.state;\n    const { match } = this.props;\n    return (\n      <React.Fragment>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title toggle>Filter</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body collapsible>\n            <ItemFilter />\n          </Panel.Body>\n        </Panel>\n        <ItemTable\n          items={items}\n          deleteItem={this.deleteItem}\n        />\n        <Route path={`${match.path}/:id`} component={ItemDetail} />\n        <Toast\n          showing={toastVisible}\n          onDismiss={this.dismissToast}\n          bsStyle={toastType}\n        >\n          {toastMessage}\n        </Toast>\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}