{"version":3,"sources":["webpack:///./src/ItemList.jsx"],"names":["ItemList","React","Component","fetchData","match","search","showError","params","URLSearchParams","vars","hasSelection","selectedId","get","category","priceMin","parseFloat","Number","isNaN","priceMax","id","idInt","parseInt","query","data","graphQLFetch","constructor","items","store","initialData","itemList","selectedItem","item","state","toastVisible","toastMessage","toastType","closeItem","bind","deleteItem","showSuccess","dismissToast","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","prevId","props","setState","index","pathname","history","itemDelete","prevState","newList","push","splice","message","render"],"mappings":"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","file":"server.538be0c8eb32368b5ad4.hot-update.js","sourcesContent":["import React from 'react';\nimport URLSearchParams from 'url-search-params';\nimport { Panel } from 'react-bootstrap';\n\nimport ItemFilter from './ItemFilter.jsx';\nimport ItemTable from './ItemTable.jsx';\nimport ItemDetail from './ItemDetail.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport Toast from './Toast.jsx';\nimport store from './store.js';\n\nexport default class ItemList extends React.Component {\n  static async fetchData(match, search, showError) {\n    const params = new URLSearchParams(search);\n    const vars = { hasSelection: false, selectedId: 0 };\n    if (params.get('category')) vars.category = params.get('category');\n\n    const priceMin = parseFloat(params.get('priceMin'), 10);\n    if (!Number.isNaN(priceMin)) vars.priceMin = priceMin;\n    const priceMax = parseFloat(params.get('priceMax'), 10);\n    if (!Number.isNaN(priceMax)) vars.priceMax = priceMax;\n\n    const { params: { id } } = match;\n    const idInt = parseInt(id, 10);\n    if (!Number.isNaN(idInt)) {\n      vars.hasSelection = true;\n      vars.selectedId = idInt;\n    }\n\n    const query = `query itemList(\n      $category: CategoryType\n      $priceMin: Float\n      $priceMax: Float\n      $hasSelection: Boolean!\n      $selectedId: Int!\n    ) {\n      itemList(\n        category: $category\n        priceMin: $priceMin\n        priceMax: $priceMax\n      ) {\n        id name category image\n        due\n      }\n      item(id: $selectedId) @include (if : $hasSelection) {\n        id description\n      }\n    }`;\n\n    const data = await graphQLFetch(query, vars, showError);\n    return data;\n  }\n\n  constructor() {\n    super();\n    const items = store.initialData ? store.initialData.itemList : null;\n    const selectedItem = store.initialData\n      ? store.initialData.item\n      : null;\n    delete store.initialData;\n    this.state = {\n      items,\n      selectedItem,\n      toastVisible: false,\n      toastMessage: '',\n      toastType: 'info',\n    };\n    this.closeItem = this.closeItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.showSuccess = this.showSuccess.bind(this);\n    this.showError = this.showError.bind(this);\n    this.dismissToast = this.dismissToast.bind(this);\n  }\n\n  componentDidMount() {\n    const { items } = this.state;\n    if (items == null) this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      location: { search: prevSearch },\n      match: { params: { id: prevId } },\n    } = prevProps;\n    const { location: { search }, match: { params: { id } } } = this.props;\n    if (prevSearch !== search || prevId !== id) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { location: { search, match } } = this.props;\n    const data = await ItemList.fetchData(match, search, this.showError);\n    if (data) {\n      this.setState({ items: data.itemList, selectedItem: data.item });\n    }\n  }\n\n  async deleteItem(index) {\n    const query = `mutation itemDelete($id: Int!) {\n      itemDelete(id: $id)\n    }`;\n    const { items } = this.state;\n    const { location: { pathname, search }, history } = this.props;\n    const { id } = items[index];\n    const data = await graphQLFetch(query, { id }, this.showError);\n    if (data && data.itemDelete) {\n      this.setState((prevState) => {\n        const newList = [...prevState.items];\n        if (pathname === `/items/${id}`) {\n          history.push({ pathname: '/items', search });\n        }\n        newList.splice(index, 1);\n        return { items: newList };\n      });\n      this.showSuccess(`Deleted item ${id} successfully.`);\n    } else {\n      this.loadData();\n    }\n  }\n\n  showSuccess(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'success',\n    });\n  }\n\n  showError(message) {\n    this.setState({\n      toastVisible: true, toastMessage: message, toastType: 'danger',\n    });\n  }\n\n  dismissToast() {\n    this.setState({ toastVisible: false });\n  }\n\n  render() {\n    const { items } = this.state;\n    if (items == null) return null;\n\n    const { toastVisible, toastType, toastMessage } = this.state;\n    const { selectedItem } = this.state;\n    return (\n      <React.Fragment>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title toggle>Filter</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body collapsible>\n            <ItemFilter />\n          </Panel.Body>\n        </Panel>\n        <ItemTable\n          items={items}\n          deleteItem={this.deleteItem}\n        />\n        <ItemDetail item={selectedItem} />\n        <Toast\n          showing={toastVisible}\n          onDismiss={this.dismissToast}\n          bsStyle={toastType}\n        >\n          {toastMessage}\n        </Toast>\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}